# Versión de la sintaxis de Docker Compose
version: '3.8'

services:
  # --- 1. Base de Datos (MySQL) ---
  db-mysql-hector:
    image: mysql:8.0
    container_name: db-mysql-hector
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hectorsoft2025
      MYSQL_DATABASE: hector_robles_orantes_db
      MYSQL_USER: hector_robles_orantes
      MYSQL_PASSWORD: hectororantessoft2025
    volumes:
      - db_data_mysql:/var/lib/mysql
      - ./mysqlinit:/docker-entrypoint-initdb.d
    networks:
      - red-hector
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -phectorsoft2025 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- 2. Backend (Express.js) ---
  hector-backend:
    build: ./API
    container_name: hector-backend
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./API/.env  # Se cargarán las variables desde este archivo
    depends_on:
      db-mysql-hector:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - red-hector

  # --- 3. Frontend (Angular) ---
  hector-frontend:
    build: ./divisaPro
    container_name: hector-frontend
    restart: always
    ports:
      - "4200:4200"
    depends_on:
      hector-backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
    networks:
      - red-hector

# --- Volúmenes persistentes ---
volumes:
  db_data_mysql:
    driver: local

# --- Red compartida entre servicios ---
networks:
  red-hector:
    driver: bridge
